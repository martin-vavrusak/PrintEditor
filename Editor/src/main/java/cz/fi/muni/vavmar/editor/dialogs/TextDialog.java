/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cz.fi.muni.vavmar.editor.dialogs;

import java.awt.BorderLayout;
import java.awt.Rectangle;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import org.netbeans.api.visual.widget.Widget;

/**
 * Dialog generated by widget to change its text properities
 * @author Martin
 */
public class TextDialog extends JDialog{
    
    private Widget ownerWidget; // widget which properities should be affected by this dialog
    
    public TextDialog(Widget widget) {
        super();
        ownerWidget = widget;
        setLayout(new BorderLayout());
        add(new TextDialogPanel());
        
//        setBounds(new Rectangle(400, 325));     //TODO Smazat!!! Nechat vypocitat dynamicky
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(screenSize.width / 2, screenSize.height / 2, 400, 325);
        
//        JTextPane textPane = new JTextPane();
//        JTextField textField = new JTextField("--- AaBbCc ---");
//        textField.setHorizontalAlignment(JTextField.CENTER);
//        Font f = new Font(null, WIDTH, WIDTH);


    }



/**
 *
 * @author Martin
 */
public class TextDialogPanel extends javax.swing.JPanel {
//    private JDialog parent;
    /**
     * Creates new form TextDialogPanel
     */
    public TextDialogPanel() {
//        this.parent = parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        javax.swing.JTextPane jTextPane1 = new javax.swing.JTextPane();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        applyDirectlyCeckBox = new javax.swing.JCheckBox();
        fontSizeComboBoxPanel = new javax.swing.JPanel();
        fontSizeComboBox = new javax.swing.JComboBox();
        fontSelectionPanel = new javax.swing.JPanel();
        fontSelectionScrollPane = new javax.swing.JScrollPane();
        fontSelectionList = new javax.swing.JList();
        previewPanel = new javax.swing.JPanel();
        previewTextField = new javax.swing.JTextField();
        fontSettingsPanel = new javax.swing.JPanel();
        boldCheckBox = new javax.swing.JCheckBox();
        italicCheckBox = new javax.swing.JCheckBox();

        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane1.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.jTextPane1.text")); // NOI18N
        jTextPane1.setAutoscrolls(false);
        jTextPane1.setMaximumSize(new java.awt.Dimension(50, 6));
        jTextPane1.setMinimumSize(new java.awt.Dimension(50, 6));
        jTextPane1.setPreferredSize(new java.awt.Dimension(50, 6));
        jScrollPane1.setViewportView(jTextPane1);
        SimpleAttributeSet attributes = new SimpleAttributeSet();
        StyleConstants.setAlignment (attributes, StyleConstants.ALIGN_JUSTIFIED);
        StyledDocument doc = (StyledDocument) jTextPane1.getDocument();
        doc.setParagraphAttributes(0, doc.getLength()-1, attributes, false);

        cancelButton.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.okButton.text")); // NOI18N

        applyDirectlyCeckBox.setSelected(true);
        applyDirectlyCeckBox.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.applyDirectlyCeckBox.text")); // NOI18N

        fontSizeComboBoxPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.fontSizeComboBoxPanel.border.title"))); // NOI18N
        fontSizeComboBoxPanel.setLayout(new javax.swing.BoxLayout(fontSizeComboBoxPanel, javax.swing.BoxLayout.LINE_AXIS));

        fontSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fontSizeComboBoxPanel.add(fontSizeComboBox);

        fontSelectionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.fontSelectionPanel.border.title"))); // NOI18N
        fontSelectionPanel.setLayout(new javax.swing.BoxLayout(fontSelectionPanel, javax.swing.BoxLayout.LINE_AXIS));

        fontSelectionList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        fontSelectionScrollPane.setViewportView(fontSelectionList);

        fontSelectionPanel.add(fontSelectionScrollPane);

        previewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.previewPanel.border.title"))); // NOI18N
        previewPanel.setLayout(new javax.swing.BoxLayout(previewPanel, javax.swing.BoxLayout.LINE_AXIS));

        previewTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        previewTextField.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.previewTextField.text")); // NOI18N
        previewTextField.setBorder(null);
        previewTextField.setHorizontalAlignment (JTextField.CENTER);
        previewPanel.add(previewTextField);

        fontSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.fontSettingsPanel.border.title"))); // NOI18N

        boldCheckBox.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.boldCheckBox.text")); // NOI18N

        italicCheckBox.setText(org.openide.util.NbBundle.getMessage(TextDialog.class, "TextDialog.italicCheckBox.text")); // NOI18N

        javax.swing.GroupLayout fontSettingsPanelLayout = new javax.swing.GroupLayout(fontSettingsPanel);
        fontSettingsPanel.setLayout(fontSettingsPanelLayout);
        fontSettingsPanelLayout.setHorizontalGroup(
            fontSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fontSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boldCheckBox)
                .addGap(10, 10, 10)
                .addComponent(italicCheckBox)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        fontSettingsPanelLayout.setVerticalGroup(
            fontSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fontSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(boldCheckBox)
                .addComponent(italicCheckBox))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(fontSelectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fontSizeComboBoxPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(previewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fontSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(applyDirectlyCeckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(fontSizeComboBoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fontSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fontSelectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(applyDirectlyCeckBox))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
//        dispose();
        TextDialog.this.dispose();  //Close this dialog
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox applyDirectlyCeckBox;
    private javax.swing.JCheckBox boldCheckBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JList fontSelectionList;
    private javax.swing.JPanel fontSelectionPanel;
    private javax.swing.JScrollPane fontSelectionScrollPane;
    private javax.swing.JPanel fontSettingsPanel;
    private javax.swing.JComboBox fontSizeComboBox;
    private javax.swing.JPanel fontSizeComboBoxPanel;
    private javax.swing.JCheckBox italicCheckBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JTextField previewTextField;
    // End of variables declaration//GEN-END:variables

//    public static void main(String args[]) {
////        /* Set the Nimbus look and feel */
////        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
////        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
////         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
////         */
////        try {
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                if ("Nimbus".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
////        } catch (ClassNotFoundException ex) {
////            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (InstantiationException ex) {
////            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (IllegalAccessException ex) {
////            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
////            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        }
////        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                JFrame frame = new JFrame("TextDialogPanel");
//                frame.setLayout(new BorderLayout());
//                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//                frame.add(new TextDialogPanel(null));
//                frame.setVisible(true);
//            }
//        });
//    }
}
//End of TextDialogPanel class


}